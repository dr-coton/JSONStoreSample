"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fs = exports.volume = exports.NAME = void 0;
const tslib_1 = require("tslib");
const fs_1 = tslib_1.__importDefault(require("fs"));
const fs_no_eperm_anymore_1 = require("fs-no-eperm-anymore");
const index_1 = require("../../write-file-atomic/index");
// keep definition on file top
exports.NAME = "internal.fs-no-eperm-anymore";
const defaultFsNoEpermAnymoreOptions = {
    items: [
        {
            platforms: ["win32"],
            errorCodes: ["EPERM", "EBUSY"],
            options: {
                retryIntervalMs: 100,
                retryTimeoutMs: 5 * 1000,
            },
        },
    ],
};
function volume(volumeOptions) {
    const impl = fs_no_eperm_anymore_1.instantiate(Object.assign(Object.assign({}, defaultFsNoEpermAnymoreOptions), volumeOptions === null || volumeOptions === void 0 ? void 0 : volumeOptions.fsNoEpermAnymore));
    return {
        _impl: Object.assign(Object.assign({}, fs_1.default), impl),
        _name: exports.NAME,
        chmod: impl.chmod,
        chown: impl.chown,
        close: impl.close,
        fsync: impl.fsync,
        mkdir: impl.mkdir,
        open: impl.open,
        readFile: impl.readFile,
        realpath: impl.realpath,
        rename: impl.rename,
        stat: impl.stat,
        writeFile: impl.writeFile,
        writeFileAtomic(path, data, writeFileOptions) {
            return index_1.writeFileAtomic(Object.assign(Object.assign({}, impl), { unlinkSync: fs_1.default.unlinkSync }), path, data, writeFileOptions, volumeOptions === null || volumeOptions === void 0 ? void 0 : volumeOptions.writeFileAtomicOptions);
        },
        unlink: impl.unlink,
    };
}
exports.volume = volume;
exports.fs = volume();
//# sourceMappingURL=index.js.map